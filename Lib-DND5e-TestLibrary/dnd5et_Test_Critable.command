[h: testTokenName = "conditionTest"]
[h: testToken = dnd5et_Util_createTestToken (testTokenName)]
[h: setAllStates (0, testToken)]
[h: setProperty ("Strength", 12, testToken)]
[h: setProperty ("Dexterity", 14, testToken)]
[h: setProperty ("Proficiency", 3, testToken)]
[h: re = dnd5e_RollExpression_WeaponAttack ("test weapon", 1)]
[h: re = dnd5e_RollExpression_setStaticRoll (re, 20)]
[h: dmg = dnd5e_RollExpression_WeaponDamage ("damage", "1d8")]
[h: dmg = dnd5e_RollExpression_setStaticRoll (dmg, 8)]
[h: rolls = json.append ("", re, dmg)]
[h, token (testTokenName): rolled = dnd5e_DiceRoller_roll (rolls)]
[h: damageRoll = json.get (rolled, 1)]
[h: log.debug (getMacroName() + "## damageRoll = " + damageRoll)]
<!-- critical damage is 8 (static) + 1d8 + 1 (Strength). So it must be between 10 and 17 -->
[h: total = dnd5e_RollExpression_getTotal (damageRoll)]
[h: testName = "Critical Damage Roll Test"]
[h: reportResults = "{}"]
[h, if (total < 10 || total > 17): reportResults = json.set (reportResults, testName, "Failed: Critical damage was not between 10-17: " + total);
	reportResults = json.set (reportResults, testName, "Passed: " + total)]
[h: removeToken (testToken)]
[h: macro.return = reportResults]