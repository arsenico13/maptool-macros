#!/bin/bash
# mtmacro is a single macro export
# mtmacset is a macro set export
# rptok is a token export
#
# Given an argument -- either a content.xml or a directory with a
# content.xml file -- determine what kind of file to make and make it
#
# params:
#   <dir>/content.xml or <dir>
#
# produces:
#   <dirname>.<type>
#

me="$0"
arg="$1"

output() {
    local template="$1"
    local nl='
'
    shift
    case "$template" in
        (*$nl);;
        (*) template="${template}${nl}"
    esac
    printf "$template" "$@"
}

die() {
   output "$@"
   exit 1
}

usage() {
    cat <<-EOF
	Usage: automagic <dir>
	or
	<dir>/content.xml
	EOF
}

if [[ -z $arg ]]; then
    die "$(usage)"
fi

test -e "$arg" && echo "$arg exists"
argxml="${arg%.xml}.xml"
argcommand="${arg%.xml}.command"
if [[ -n "$DEBUG" ]]; then
    test -e "${argxml}" && echo "${argxml} exists"
    test -e "${argcommand}" && echo "${argcommand} exists"
fi

if [[ -d $arg && -e $arg/content.xml ]]; then
    content_file="$arg/content.xml"
    content_dir="$(dirname $arg/.)" # strips trailing /
elif [[ -f $arg && ${arg%%content.xml} != $arg ]]; then
    content_file="$arg"
    content_dir="$(dirname $arg)"
elif [[ -e "$argxml" && -e "$argcommand" ]]; then
    content_file="$argxml"
    content_dir="${arg%.xml}"
else
    die "did you give me crap? cause I need a content.xml and there ain't one at $arg"
fi

if [[ ! -e $content_file ]]; then
    die "$(usage)"
fi

TYPE=$(head -1 "$content_file" | tee \
	>(grep -q Token && echo 'rptok' ) \
    >(grep -q Campaign && echo 'mtprops') \
    >(grep -q Macro && echo 'mtmacro') \
    >(grep -q list && echo 'mtmacset') >/dev/null)

case "$TYPE" in
    (mtprops)
        make $content_dir.$TYPE
        ;;
    (rptok)
        token-assemble $content_dir --verbose
        ;;
    (mtmacro)
        # really a file pattern by this point
        macro-assemble $content_dir --verbose
        ;;
    (*)
        die "automagic now only builds macros, tokens, and properties, to build a macset requires more arguments, see README.md"
        ;;
esac
